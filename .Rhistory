data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
install.packages("xlsx")
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
library("xlsx")
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
View(data)
View(data)
type(data)
type(1)
typeof(1)
typeof(data)
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
rm(list=ls())
rm(list=ls())
rm(list=ls())
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
data <- data.table(
NA. = integer(),
Accession = character(),
Gene_name = character(),
logFC = numeric(),
AveExp = numeric(),
logFC = numeric(),
t = numeric(),
P.value = numeric(),
adj.P.Val = numeric(),
B = numeric())
raw_data$adj.P.Val[1]
<- c() #vector to store IDs
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.value <- c() #vector to store P.value of dif_regulated genes
adj.P.val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data)) {
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession., raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.value <- c(P.value, raw_data$P.value[i])
adj.P.val <- c(adj.P.val, raw_data$adj.P.val[i])
B <- c(B, raw_data$B[i])
}
}
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.value <- c() #vector to store P.value of dif_regulated genes
adj.P.val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data)) {
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession, raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.value <- c(P.value, raw_data$P.value[i])
adj.P.val <- c(adj.P.val, raw_data$adj.P.val[i])
B <- c(B, raw_data$B[i])
}
}
head(NA.)
NA.
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.value <- c() #vector to store P.value of dif_regulated genes
adj.P.val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data)) {
print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession, raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.value <- c(P.value, raw_data$P.value[i])
adj.P.val <- c(adj.P.val, raw_data$adj.P.val[i])
B <- c(B, raw_data$B[i])
}
}
seq(raw_data)
raw_data$NA.
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.value <- c() #vector to store P.value of dif_regulated genes
adj.P.val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession, raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.value <- c(P.value, raw_data$P.value[i])
adj.P.val <- c(adj.P.val, raw_data$adj.P.val[i])
B <- c(B, raw_data$B[i])
}
}
NA.
size(NA.)
len(NA.)
length(NA.)
data <- data.frame(NA., Accession, Gene_name,logFC, AveExp, t, P.value, adj.P.val, B)
Accession
Gene_name
logFC
length(AveExp)
length(NA.)
length(Accession)
length(Gene_name)
length(logFC)
length(AveExp)
length(t)
length(P.value)
length(adj.P.val)
length(B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.value, adj.P.val, B)
raw_data$P.value[1]
View(raw_data)
View(raw_data)
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.Value <- c() #vector to store P.value of dif_regulated genes
adj.P.val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession, raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.Value <- c(P.Value, raw_data$P.Value[i])
adj.P.val <- c(adj.P.val, raw_data$adj.P.val[i])
B <- c(B, raw_data$B[i])
}
}
length(NA.)
length(Accession)
length(Gene_name)
length(logFC)
length(AveExp)
length(t)
length(P.Value)
length(adj.P.val)
length(B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.value, adj.P.val, B)
NA.<- c() #vector to store IDs of dif_regulated genes
Accession <- c() #vector to store Accession numbers of dif_regulated genes
Gene_name <- c() #vector to store IDs of dif_regulated genes
logFC <- c() #vector to store IDs of dif_regulated genes
AveExp <- c() #vector to store IDs of dif_regulated genes
t <- c() #vector to store IDs of dif_regulated genes
P.Value <- c() #vector to store P.value of dif_regulated genes
adj.P.Val <- c() #vector to store P.value of dif_regulated genes
B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
NA. <- c(NA., raw_data$NA.[i])
Accession <- c(Accession, raw_data$Accession[i])
Gene_name <- c(Gene_name, raw_data$Gene_name[i])
logFC <- c(logFC, raw_data$logFC[i])
AveExp <- c(AveExp, raw_data$AveExp[i])
t <- c(t, raw_data$t[i])
P.Value <- c(P.Value, raw_data$P.Value[i])
adj.P.Val <- c(adj.P.Val, raw_data$adj.P.Val[i])
B <- c(B, raw_data$B[i])
}
}
length(NA.)
length(Accession)
length(Gene_name)
length(logFC)
length(AveExp)
length(t)
length(P.Value)
length(adj.P.Val)
length(B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.value, adj.P.val, B)
length(NA.)
length(Accession)
length(Gene_name)
length(logFC)
length(AveExp)
length(t)
length(P.Value)
length(adj.P.Val)
length(B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
write.xlsx(data.frame,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = TRUE, append = FALSE)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
write.xlsx(data.frame,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = FALSE, row.names = FALSE, append = FALSE)
View(data)
View(data)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
write.xlsx(data.frame,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
n <- seq(2)
n
#EXCEL <- data.frame()
n <- seq(2)
p <- seq(2)
EXCEL <- data.frame(n,p)
View(EXCEL)
View(EXCEL)
n <- seq(2)
p <- seq(2)
EXCEL <- data.frame(n,p)
write.xlsx(EXCEL, file = "test", sheetName = "test_sheet", col.names = TRUE, row.names = FALSE, append = FALSE]
n <- seq(2)
p <- seq(2)
EXCEL <- data.frame(n,p)
write.xlsx(EXCEL, file = "test", sheetName = "test_sheet", col.names = TRUE, row.names = FALSE, append = FALSE)
n <- seq(2)
p <- seq(2)
EXCEL <- data.frame(n,p)
write.xlsx(EXCEL, file = "test.xlsx", sheetName = "test_sheet", col.names = TRUE, row.names = FALSE, append = FALSE)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
write.xlsx(data,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
data <- data.frame(NA., Accession, Gene_name, logFC, AveExp, t, P.Value, adj.P.Val, B)
write.xlsx(data,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
write(Gene_name, "dif_expressed genes.txt")
View(EXCEL)
Gene_name
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
library("xlsx")
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
rm(list=ls())
rm(list=ls())
library("xlsx")
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
sig_NA.<- c() #vector to store IDs of dif_regulated genes
sig_Accession <- c() #vector to store Accession numbers of dif_regulated genes
sig_Gene_name <- c() #vector to store IDs of dif_regulated genes
sig_logFC <- c() #vector to store IDs of dif_regulated genes
sig_AveExp <- c() #vector to store IDs of dif_regulated genes
sig_t <- c() #vector to store IDs of dif_regulated genes
sig_P.Value <- c() #vector to store P.value of dif_regulated genes
sig_adj.P.Val <- c() #vector to store P.value of dif_regulated genes
sig_B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
sig_NA. <- c(sig_NA., raw_data$NA.[i])
sig_Accession <- c(sig_Accession, raw_data$Accession[i])
sig_Gene_name <- c(sig_Gene_name, raw_data$Gene_name[i])
sig_sig_logFC <- c(sig_logFC, raw_data$logFC[i])
sig_AveExp <- c(sig_AveExp, raw_data$AveExp[i])
sig_t <- c(sig_t, raw_data$t[i])
sig_P.Value <- c(sig_P.Value, raw_data$P.Value[i])
sig_adj.P.Val <- c(sig_adj.P.Val, raw_data$adj.P.Val[i])
sig_B <- c(sig_B, raw_data$B[i])
}
}
data <- data.frame(sig_NA., sig_Accession, sig_Gene_name, sig_logFC, sig_AveExp, sig_t, sig_P.Value, sig_adj.P.Val, sig_B)
size(sig_NA.)
length(sig_NA.)
length(sig_Accession)
length(sig_Gene_name)
length(sig_sig_logFC)
View(raw_data)
View(raw_data)
raw_data$logFC[1]
rm(list=ls())
library("xlsx")
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
sig_NA.<- c() #vector to store IDs of dif_regulated genes
sig_Accession <- c() #vector to store Accession numbers of dif_regulated genes
sig_Gene_name <- c() #vector to store IDs of dif_regulated genes
sig_logFC <- c() #vector to store IDs of dif_regulated genes
sig_AveExp <- c() #vector to store IDs of dif_regulated genes
sig_t <- c() #vector to store IDs of dif_regulated genes
sig_P.Value <- c() #vector to store P.value of dif_regulated genes
sig_adj.P.Val <- c() #vector to store P.value of dif_regulated genes
sig_B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for differentially expressed genes
sig_NA. <- c(sig_NA., raw_data$NA.[i])
sig_Accession <- c(sig_Accession, raw_data$Accession[i])
sig_Gene_name <- c(sig_Gene_name, raw_data$Gene_name[i])
sig_logFC <- c(sig_logFC, raw_data$logFC[i])
sig_AveExp <- c(sig_AveExp, raw_data$AveExp[i])
sig_t <- c(sig_t, raw_data$t[i])
sig_P.Value <- c(sig_P.Value, raw_data$P.Value[i])
sig_adj.P.Val <- c(sig_adj.P.Val, raw_data$adj.P.Val[i])
sig_B <- c(sig_B, raw_data$B[i])
}
}
data <- data.frame(sig_NA., sig_Accession, sig_Gene_name, sig_logFC, sig_AveExp, sig_t, sig_P.Value, sig_adj.P.Val, sig_B)
write.xlsx(data,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
data <- data.frame(sig_NA., sig_Accession, sig_Gene_name, sig_logFC, sig_AveExp, sig_t, sig_P.Value, sig_adj.P.Val, sig_B)
write.xlsx(data,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
View(data)
View(data)
rm(list=ls())
library("xlsx")
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
sig_NA.<- c() #vector to store IDs of dif_regulated genes
sig_Accession <- c() #vector to store Accession numbers of dif_regulated genes
sig_Gene_name <- c() #vector to store IDs of dif_regulated genes
sig_logFC <- c() #vector to store IDs of dif_regulated genes
sig_AveExp <- c() #vector to store IDs of dif_regulated genes
sig_t <- c() #vector to store IDs of dif_regulated genes
sig_P.Value <- c() #vector to store P.value of dif_regulated genes
sig_adj.P.Val <- c() #vector to store P.value of dif_regulated genes
sig_B <- c() #vector to store B of dif_regulated genes
for (i in seq(raw_data$NA.)) {
#print(i)
if(raw_data$adj.P.Val[i]<0.05){ #Criteria for deferentially expressed genes
sig_NA. <- c(sig_NA., raw_data$NA.[i])
sig_Accession <- c(sig_Accession, raw_data$Accession[i])
sig_Gene_name <- c(sig_Gene_name, raw_data$Gene_name[i])
sig_logFC <- c(sig_logFC, raw_data$logFC[i])
sig_AveExp <- c(sig_AveExp, raw_data$AveExp[i])
sig_t <- c(sig_t, raw_data$t[i])
sig_P.Value <- c(sig_P.Value, raw_data$P.Value[i])
sig_adj.P.Val <- c(sig_adj.P.Val, raw_data$adj.P.Val[i])
sig_B <- c(sig_B, raw_data$B[i])
}
}
filtered_data <- data.frame(sig_NA., sig_Accession, sig_Gene_name, sig_logFC, sig_AveExp, sig_t, sig_P.Value, sig_adj.P.Val, sig_B)
write.xlsx(filtered_data,
file =  "CoV2_UN_48_filtered.xlsx",
sheetName = "CoV2_UN_48_filtered",
col.names = TRUE, row.names = FALSE, append = FALSE)
filtered_data$color <- NA
for (i in 1:nrow(filtered_data)){
if(filtered_data[i, 4] > 0.3){
tt[i, 10] <- "up_regulated"
}
if(filtered_data[i, 4] < -0.3){
tt[i, 10] <- "down_regulated"
}
}
filtered_data$color <- NA
for (i in 1:nrow(filtered_data)){
if(filtered_data[i, 4] > 0.3){
filtered_data[i, 10] <- "up_regulated"
}
if(filtered_data[i, 4] < -0.3){
filtered_data[i, 10] <- "down_regulated"
}
}
View(filtered_data)
View(filtered_data)
is.na(filtered_data$color)
filtered_data$color[is.na(filtered_data$color)] <- "significant"
filtered_data$color[is.na(filtered_data$color)] <- "significant" #Label remaining significant genes
filtered_data$Gene_name[filtered_data$color == "significant"] <- NA #Deleting other significant gene names
filtered_data$color[is.na(filtered_data$color)] <- "significant" #Label remaining significant genes
filtered_data$sig_Gene_name[filtered_data$color == "significant"] <- NA #Deleting other significant gene names
View(filtered_data)
View(filtered_data)
rm(list=ls())
library("xlsx")
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\1. Our data\\SARS-CoV-2"))
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
data$color <- NA #create a Color column
for (i in 1:nrow(data)){
if(data[i, 4] > 0.3 & data()[i, 8] < 0.05){
data[i, 10] <- "up_regulated"
}
if(data[i, 4] < -0.3 & data[i, 8] < 0.05){
data[i, 10] <- "down_regulated"
}
if(data[i, 8] > 0.05){
data[i, 10] <- "NS" #Non significant
data[i, 3] <- NA #Delete gene name for NS - Is this necessary???
}
}
data$color <- NA #create a Color column
for (i in 1:nrow(data)){
if(data[i, 4] > 0.3 & data[i, 8] < 0.05){
data[i, 10] <- "up_regulated"
}
if(data[i, 4] < -0.3 & data[i, 8] < 0.05){
data[i, 10] <- "down_regulated"
}
if(data[i, 8] > 0.05){
data[i, 10] <- "NS" #Non significant
data[i, 3] <- NA #Delete gene name for NS - Is this necessary???
}
}
data$color[is.na(data$color)] <- "significant" #Label remaining significant genes
#data$Gene_name[data$color == "significant"] <- NA
View(data)
View(data)
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
raw_data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
data <- raw_data
data$color <- NA #create a Color column
for (i in 1:nrow(data)){
if(data[i, 4] > 0.3 & data[i, 8] < 0.05){
data[i, 10] <- "up_regulated"
}
else if(data[i, 4] < -0.3 & data[i, 8] < 0.05){
data[i, 10] <- "down_regulated"
}
else if(data[i, 8] > 0.05){
data[i, 10] <- "NS" #Non significant
data[i, 3] <- NA #Delete gene name for NS - Is this necessary???
}
else{ #Label remaining significant genes
data[i,10] <- "significant"
data[i, 3] <- NA #Delete gene name for significant
}
}
library("xlsx") #Read/Write excel files
library(ggrepel) #plots
names(data)
cols <- c("up_regulated" = "#cc0000", "down_regulated" = "#009933", "NS" = "darkgrey", "significant" = "#ffff99")
path_fig <- paste0("results/volcano_plot.pdf")
pdf(path_fig, height = 5, width = 6)
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC))
+ geom_point(size=3, alpha = 3, na.rm = T)
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T)
+ scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000"))
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000"))
+ theme(legend.title=element_text(size=15),legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"),plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=15),axis.title.x=element_text(size=15),
axis.text.y=element_text(size=18),axis.text.x=element_text(size=18))
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000")) + theme(legend.title=element_text(size=15),legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"),plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=15),axis.title.x=element_text(size=15),
axis.text.y=element_text(size=18),axis.text.x=element_text(size=18))
+ labs(x="Log2 Fold Change",y="-log10 (adj.P.Val)")
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000")) + theme(legend.title=element_text(size=15),legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"),plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=15),axis.title.x=element_text(size=15),
axis.text.y=element_text(size=18),axis.text.x=element_text(size=18))
+ labs(x="Log2 Fold Change",y="-log10 (adj.P.Val)")
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000")) + theme(legend.title=element_text(size=15),legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"),plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=15),axis.title.x=element_text(size=15),
axis.text.y=element_text(size=18),axis.text.x=element_text(size=18)) + labs(x="Log2 Fold Change",y="-log10 (adj.P.Val)")
+ xlim(-1.8, 1)
pdf("volcano_plot.pdf", height = 5, width = 6)
vol <- ggplot(data, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=3, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#ffffcc","#670000")) + theme(legend.title=element_text(size=15),legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"),plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=15),axis.title.x=element_text(size=15),
axis.text.y=element_text(size=18),axis.text.x=element_text(size=18)) + labs(x="Log2 Fold Change",y="-log10 (adj.P.Val)") + xlim(-1.8, 1) + geom_text_repel(aes(label = Gene_name),size=4,label.size = 0.1, color = "black")
vol
dev.off()
