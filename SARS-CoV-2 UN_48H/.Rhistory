}
pdf("volcano_plot.pdf", height = 5, width = 7)
vol <- ggplot(data = data_vol, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=1, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#F2490C","#670000")) + theme(legend.title=element_text(size=10), legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"), plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=10), axis.title.x=element_text(size=10),
axis.text.y=element_text(size=10), axis.text.x=element_text(size=10)) + labs(x="Log2 Fold Change", y="-log10 (adj.P.Val)") + xlim(-2.5, 2.5) + geom_text_repel(aes(label = Gene_name), size=2.5, color = "black") + theme_light()
vol
dev.off()
pdf("volcano_plot_line.pdf", height = 5, width = 7)
vol <- ggplot(data = data_vol, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=1, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#F2490C","#670000")) + theme(legend.title=element_text(size=10), legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"), plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=10), axis.title.x=element_text(size=10),
axis.text.y=element_text(size=10), axis.text.x=element_text(size=10)) + labs(x="Log2 Fold Change", y="-log10 (adj.P.Val)") + xlim(-2.5, 2.5) + geom_text_repel(aes(label = Gene_name), size=2.5, color = "black") + theme_light() + geom_hline(yintercept= - log10(0.05), linetype="dashed")
vol
dev.off()
#ggsave("volcano_plot_line.png", vol, height = 5, width = 7)
rm(vol)
rm(data_vol)
View(data_raw)
View(data_raw)
View(data)
View(data)
rm(data_raw)
data <- read.xlsx("covid-19_proteomics_UNINF_vs_H48PI_DGE_results.xlsx",1)
enrichr_top <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in 1:100) {
top_pathway <- data.frame(Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i] )
enrichr_top <- rbind(enrichr_top, top_pathway)
}
rm(top_pathway)
pdf("Top100_Comparison_pathways_enrichr.pdf", width = 8, height = 10)
p<-ggplot(enrichr_top, aes(x = CoV2_UN_48, y = Term)) + geom_point(aes(size = Overlap, color = Adjusted.P.value)) + scale_color_gradientn(colors = c("#668466", "#CC0000")) + theme_classic()
p
#order from low to high p-value
enrichr_top$CoV2_UN_48 <- 1
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
enrichr_top$Term <- factor(top_enrichr$Term, levels = top_enrichr$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 8, height = 10)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
pdf("Top_Comparison_pathways_enrichr.pdf", width = 8)
p<-ggplot(enrichr_top, aes(x = CoV2_UN_48, y = Term)) + geom_point(aes(size = Overlap, color = Adjusted.P.value)) + scale_color_gradientn(colors = c("#668466", "#CC0000")) + theme_classic()
p
dev.off()
enrichr_top$Term <- factor(top_enrichr$Term, levels = top_enrichr$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 8, height = 10)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
View(enrichr_top)
View(enrichr_top)
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
rm(top_enrichr)
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
View(enrichr_top)
View(enrichr_top)
View(enrichr)
View(enrichr)
View(enrichr_raw)
View(enrichr_raw)
View(enrichr)
View(enrichr)
enrichr_raw <- read.delim("Enrichr_BioPlanet_2019_table.txt")
enrichr <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr_raw$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr_raw$Term[i], Overlap = enrichr_raw$Overlap[i], Adjusted.P.value = enrichr_raw$Adjusted.P.value[i], Genes = enrichr_raw$Genes[i])
enrichr <- rbind(enrichr, sig)
}
}
rm(enrichr)
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr_raw$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr_raw$Term[i], Overlap = enrichr_raw$Overlap[i], Adjusted.P.value = enrichr_raw$Adjusted.P.value[i], Genes = enrichr_raw$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
View(enrichr_sig)
View(enrichr_sig)
View(enrichr_sig)
for (i in 1:nrow(top)){
enrichr_sig$Overlap[i] <- round(eval(parse(text = enrichr_sig$Overlap[i])), digits = 2) #2 decimal places
}
for (i in 1:nrow(enrichr_sig)){
enrichr_sig$Overlap[i] <- round(eval(parse(text = enrichr_sig$Overlap[i])), digits = 2) #2 decimal places
}
#and order from top to bottom overlap
#top <- top[with(top, order(Overlap)),]
enrichr_top <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in 1:100) {
top_pathway <- data.frame(Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i] )
enrichr_top <- rbind(enrichr_top, top_pathway)
}
enrichr_top <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in 1:100) {
top_pathway <- data.frame(Term = enrichr_sig$Term[i], Overlap = enrichr_sig$Overlap[i], Adjusted.P.value = enrichr_sig$Adjusted.P.value[i] )
enrichr_top <- rbind(enrichr_top, top_pathway)
}
rm(top_pathway)
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 8, height = 10)
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 8, height = 10)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 8, height = 20)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 15, height = 20)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 18, height = 20)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
#order from low to high p-value
enrichr_top$CoV2_UN_48 <- 1
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_dot.pdf", width = 8)
p<-ggplot(enrichr_top, aes(x = CoV2_UN_48, y = Term)) + geom_point(aes(size = Overlap, color = Adjusted.P.value)) + scale_color_gradientn(colors = c("#668466", "#CC0000")) + theme_classic()
p
dev.off()
pdf("Top_Comparison_pathways_enrichr_dot.pdf", width = 18, height = 20)
pdf("Top_Comparison_pathways_enrichr_dot.pdf", width = 18, height = 20)
p<-ggplot(enrichr_top, aes(x = CoV2_UN_48, y = Term)) + geom_point(aes(size = Overlap, color = Adjusted.P.value)) + scale_color_gradientn(colors = c("#668466", "#CC0000")) + theme_classic()
p
dev.off()
enrichr_IFN <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in c(45, 46, 53, 132, 138)) {
pathway_IFN <- data.frame(Term = enrichr_sig$Term[i], Overlap = enrichr_sig$Overlap[i], Adjusted.P.value = enrichr_sig$Adjusted.P.value[i] )
IFN_enrichr <- rbind(enrichr_IFN, pathway_IFN)
}
rm(pathway_IFN)
rm(IFN_enrichr)
enrichr_IFN <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in c(45, 46, 53, 132, 138)) {
pathway_IFN <- data.frame(Term = enrichr_sig$Term[i], Overlap = enrichr_sig$Overlap[i], Adjusted.P.value = enrichr_sig$Adjusted.P.value[i] )
enrichr_IFN <- rbind(enrichr_IFN, pathway_IFN)
}
rm(pathway_IFN)
View(enrichr_IFN)
View(enrichr_IFN)
enrichr_IFN <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in c(44, 45, 52, 131, 137)) {
pathway_IFN <- data.frame(Term = enrichr_sig$Term[i], Overlap = enrichr_sig$Overlap[i], Adjusted.P.value = enrichr_sig$Adjusted.P.value[i] )
enrichr_IFN <- rbind(enrichr_IFN, pathway_IFN)
}
rm(pathway_IFN)
View(enrichr_IFN)
View(enrichr_IFN)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Top_Comparison_pathways_enrichr_bar.pdf", width = 18, height = 20)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 18, height = 20)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_top$Term <- factor(enrichr_top$Term, levels = enrichr_top$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_top100_bar.pdf", width = 18, height = 20)
p<-ggplot(data = enrichr_top, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 8, height = 10)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 6, height = 15)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 10, height = 8)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 10, height = 5)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
enrichr_IFN$Term <- factor(enrichr_IFN$Term, levels = enrichr_IFN$Term ) #To make it the right order for ggplot
pdf("Comparison_pathways_enrichr_IFN_bar.pdf", width = 10, height = 4)
p<-ggplot(data = enrichr_IFN, aes(x = Term, y = Overlap)) + geom_bar(stat="identity", aes(fill = Adjusted.P.value)) + scale_fill_gradientn(colors = c("#668466", "#CC0000")) + coord_flip() + theme_light() + theme(axis.title.y=element_blank())
p
dev.off()
rm(p)
path_genes <- data.frame(Term = c(), Gene = c())
type <- data.frame(Node = c(), Type = c())
for (i in 1:nrow(enrichr_IFN)){ #Only the 10 most significant pathways
#Add gene to type table
node <- data.frame(enrichr_IFN$Term[i], "Pathway")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Get string of genes
genes <- strsplit(enrichr_IFN$Genes[i], ";")
genes <- genes[[1]]
for (l in 1:length(genes)){#Create an entry in the data frame for every gene
#Add gene to type table
node <- data.frame(genes[l], "Gene")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Add Pathway_Gene
edge <- data.frame(enrichr_IFN$Term[i], genes[l])
names(edge) <- c("Term", "Gene") #Data.frames should have consistent rownames
path_genes <- rbind(path_genes, edge)
}
}
enrichr_IFN <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in c(44, 45, 52, 131, 137)){ #Indexes of selected pathways
pathway_IFN <- data.frame(Term = enrichr_sig$Term[i], Overlap = enrichr_sig$Overlap[i], Adjusted.P.value = enrichr_sig$Adjusted.P.value[i], Genes =  enrichr_sig$Genes[i])
enrichr_IFN <- rbind(enrichr_IFN, pathway_IFN)
}
rm(pathway_IFN)
path_genes <- data.frame(Term = c(), Gene = c())
type <- data.frame(Node = c(), Type = c())
for (i in 1:nrow(enrichr_IFN)){ #Only the 10 most significant pathways
#Add gene to type table
node <- data.frame(enrichr_IFN$Term[i], "Pathway")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Get string of genes
genes <- strsplit(enrichr_IFN$Genes[i], ";")
genes <- genes[[1]]
for (l in 1:length(genes)){#Create an entry in the data frame for every gene
#Add gene to type table
node <- data.frame(genes[l], "Gene")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Add Pathway_Gene
edge <- data.frame(enrichr_IFN$Term[i], genes[l])
names(edge) <- c("Term", "Gene") #Data.frames should have consistent rownames
path_genes <- rbind(path_genes, edge)
}
}
#Delete temporary variables
rm(node)
rm(edge)
write.xlsx(path_genes, "Cytoscape_Pathway_Genes_IFN.xlsx", sheetName = "Pathway_Genes", col.names= TRUE, row.names = FALSE)
write.xlsx(type, "Cytoscape_Type_IFN.xlsx", sheetName = "Type", col.names= TRUE, row.names = FALSE)
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\Thesis\\SARS-CoV-2 UN_48H\\Data and figures"))
path_genes <- data.frame(Term = c(), Gene = c())
type <- data.frame(Node = c(), Type = c())
for (i in 1:nrow(enrichr_IFN)){ #Only the 10 most significant pathways
#Add gene to type table
node <- data.frame(enrichr_IFN$Term[i], "Pathway")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Get string of genes
genes <- strsplit(enrichr_IFN$Genes[i], ";")
genes <- genes[[1]]
for (l in 1:length(genes)){#Create an entry in the data frame for every gene
#Add gene to type table
node <- data.frame(genes[l], "Gene")
names(node) <- c("Node", "Type")
type <- rbind(type, node)
#Add Pathway_Gene
edge <- data.frame(enrichr_IFN$Term[i], genes[l])
names(edge) <- c("Term", "Gene") #Data.frames should have consistent rownames
path_genes <- rbind(path_genes, edge)
}
}
#Delete temporary variables
rm(node)
rm(edge)
rm(path_genes)
enrichr_raw <- read.delim("Enrichr_KEGG_2021_Human_table.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr_raw$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr_raw$Term[i], Overlap = enrichr_raw$Overlap[i], Adjusted.P.value = enrichr_raw$Adjusted.P.value[i], Genes = enrichr_raw$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
write.xlsx(enrichr_sig, "Enrichr_KEGG_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
library("xlsx") #Read/Write excel files
library(ggrepel) #plots
library(clusterProfiler)
library(org.Hs.eg.db)
write.xlsx(enrichr_sig, "Enrichr_KEGG_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
rm(list=ls())
enrichr_raw <- read.delim("Enrichr_KEGG_2021_Human_table.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr_raw$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr_raw$Term[i], Overlap = enrichr_raw$Overlap[i], Adjusted.P.value = enrichr_raw$Adjusted.P.value[i], Genes = enrichr_raw$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr_raw$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr_raw$Term[i], Overlap = enrichr_raw$Overlap[i], Adjusted.P.value = enrichr_raw$Adjusted.P.value[i], Genes = enrichr_raw$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
rm(sig)
rm(list=ls())
enrichr <- read.delim("Enrichr_KEGG_2021_Human_table.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr_raw)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr, sig)
}
}
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr, sig)
}
}
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
#Update enrichr data.frame
enrichr <- enrichr_sig
rm(i)
rm(sig)
rm(enricher_sig)
enrichr <- read.delim("Enrichr_KEGG_2021_Human_table.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
#Update enrichr data.frame
enrichr <- enrichr_sig
rm(i)
rm(sig)
rm(enrichr_sig)
View(enrichr)
View(enrichr)
write.xlsx(enrichr, "Enrichr_KEGG_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
for (i in 1:nrow(enrichr_sig)){
enrichr_sig$Overlap[i] <- round(eval(parse(text = enrichr_sig$Overlap[i])), digits = 2) #2 decimal places
}
for (i in 1:nrow(enrichr)){
enrichr$Overlap[i] <- round(eval(parse(text = enrichr$Overlap[i])), digits = 2) #2 decimal places
}
#and order from top to bottom overlap
#top <- top[with(top, order(Overlap)),]
for (i in 1:nrow(enrichr)){
enrichr$Overlap[i] <- round(eval(parse(text = enrichr$Overlap[i])), digits = 2) #2 decimal places
}
rm(i)
#and order from top to bottom overlap
#top <- top[with(top, order(Overlap)),]
View(enrichr)
View(enrichr)
write.xlsx(enrichr, "Enrichr_KEGG_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
enrichr_top <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c())
# do top enrichr but with Interferon and pvalue < 0.05
for ( i in 1:100) {
top_pathway <- data.frame(Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i] )
enrichr_top <- rbind(enrichr_top, top_pathway)
}
rm(top_pathway)
View(enrichr_top)
View(enrichr_top)
View(enrichr)
View(enrichr)
rm(enrichr_top)
rm(i)
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\Thesis\\SARS-CoV-2 UN_48H\\Data and figures"))
rm(list=ls())
library("xlsx") #Read/Write excel files
library(ggrepel) #plots
library(clusterProfiler)
library(org.Hs.eg.db)
knitr::opts_knit$set(root.dir = normalizePath("C:\\Users\\beasav\\OneDrive - KI.SE\\Bioinformatics\\Thesis\\SARS-CoV-1 UN_48H\\Data and figures"))
data <- read.xlsx("SARS_UN48_vs_SA48_DGE_results.xlsx",1)
data <- read.xlsx("SARS_UN48_vs_SA48_DGE_results.xlsx",1)
data$Significance <- NA #create a Color column
for (i in 1:nrow(data)){
if(data[i, 4] > 0.3 & data[i, 8] < 0.05){
data[i, 10] <- "up_regulated"
}
else if(data[i, 4] < -0.3 & data[i, 8] < 0.05){
data[i, 10] <- "down_regulated"
}
else if(data[i, 8] > 0.05){
data[i, 10] <- "NS" #Non significant
#data[i, 3] <- NA #Delete gene name for NS - So that it doesn't appear in the figure?
}
else{ #Label remaining significant genes
data[i,10] <- "significant"
#data[i, 3] <- NA #Delete gene name for significant - So that it doesn't appear in the figure?
}
}
data$Significance <- NA #create a Color column
for (i in 1:nrow(data)){
if(data[i, 4] > 0.3 & data[i, 8] < 0.05){
data[i, 10] <- "up_regulated"
}
else if(data[i, 4] < -0.3 & data[i, 8] < 0.05){
data[i, 10] <- "down_regulated"
}
else if(data[i, 8] > 0.05){
data[i, 10] <- "NS" #Non significant
#data[i, 3] <- NA #Delete gene name for NS - So that it doesn't appear in the figure?
}
else{ #Label remaining significant genes
data[i,10] <- "significant"
#data[i, 3] <- NA #Delete gene name for significant - So that it doesn't appear in the figure?
}
}
rm(i)
data_vol <- data
for (i in 1:nrow(data_vol)){
if(data_vol[i, 10] == "NS"){
data_vol[i, 3] <- NA #Delete gene name for NS - So that it doesn't appear in the figure?
}
else if(data_vol[i, 10] == "significant") { #Label remaining significant genes
data_vol[i, 3] <- NA #Delete gene name for significant - So that it doesn't appear in the figure?
}
}
data_vol <- data
for (i in 1:nrow(data_vol)){
if(data_vol[i, 10] == "NS"){
data_vol[i, 3] <- NA #Delete gene name for NS - So that it doesn't appear in the figure?
}
else if(data_vol[i, 10] == "significant") { #Label remaining significant genes
data_vol[i, 3] <- NA #Delete gene name for significant - So that it doesn't appear in the figure?
}
}
rm(i)
pdf("volcano_plot.pdf", height = 5, width = 7)
vol <- ggplot(data = data_vol, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=1, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#F2490C","#670000")) + theme(legend.title=element_text(size=10), legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"), plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=10), axis.title.x=element_text(size=10),
axis.text.y=element_text(size=10), axis.text.x=element_text(size=10)) + labs(x="Log2 Fold Change", y="-log10 (adj.P.Val)") + xlim(-2.5, 2.5) + geom_text_repel(aes(label = Gene_name), size=2.5, color = "black") + theme_light()
vol
dev.off()
pdf("volcano_plot_line.pdf", height = 5, width = 7)
vol <- ggplot(data = data_vol, aes(x = logFC, y = -log10(adj.P.Val), colour = logFC)) + geom_point(size=1, alpha = 3, na.rm = T) + scale_color_gradientn(colors = c("#003300", "#325b32","#668466","#F2490C","#670000")) + theme(legend.title=element_text(size=10), legend.text=element_text(size=6),
legend.key.size=unit(0.7,"line"), plot.title = element_text(hjust = 0.5),
axis.title.y=element_text(size=10), axis.title.x=element_text(size=10),
axis.text.y=element_text(size=10), axis.text.x=element_text(size=10)) + labs(x="Log2 Fold Change", y="-log10 (adj.P.Val)") + xlim(-2.5, 2.5) + geom_text_repel(aes(label = Gene_name), size=2.5, color = "black") + theme_light() + geom_hline(yintercept= - log10(0.05), linetype="dashed")
vol
dev.off()
#ggsave("volcano_plot_line.png", vol, height = 5, width = 7)
rm(vol)
rm(data_vol)
sig_Gene_names <- data$Gene_name[data$Significance != "NS"] #Gene names are stored in raw data; data$Significance indicates significance
write(sig_Gene_names, "dif_expressed genes.txt")
write(sig_Gene_names, "dif_expressed genes.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
enrichr <- read.delim("Enrichr_KEGG_2021_Human_table.txt")
enrichr_sig <- data.frame(Term = c(), Overlap = c(), Adjusted.P.value = c(), Genes = c())
for (i in 1:nrow(enrichr)){
if (enrichr$Adjusted.P.value[i] < 0.05) {
sig = data.frame (Term = enrichr$Term[i], Overlap = enrichr$Overlap[i], Adjusted.P.value = enrichr$Adjusted.P.value[i], Genes = enrichr$Genes[i])
enrichr_sig <- rbind(enrichr_sig, sig)
}
}
enrichr <- enrichr_sig
rm(enrichr_sig)
rm(i)
rm(sig)
write.xlsx(enrichr_sig, "Enrichr_KEGG_2021_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
write.xlsx(enrichr, "Enrichr_KEGG_2021_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
for (i in 1:nrow(enrichr_sig)){
enrichr_sig$Overlap[i] <- round(eval(parse(text = enrichr_sig$Overlap[i])), digits = 2) #2 decimal places
}
for (i in 1:nrow(enrichr)){
enrichr$Overlap[i] <- round(eval(parse(text = enrichr$Overlap[i])), digits = 2) #2 decimal places
}
#and order from top to bottom overlap
#top <- top[with(top, order(Overlap)),]
for (i in 1:nrow(enrichr)){
enrichr$Overlap[i] <- round(eval(parse(text = enrichr$Overlap[i])), digits = 2) #2 decimal places
}
rm(i)
#and order from top to bottom overlap
#top <- top[with(top, order(Overlap)),]
write.xlsx(enrichr, "Enrichr_KEGG_2021_sig.xlsx", sheetName = "Enrichr_sig", col.names= TRUE, row.names = FALSE)
